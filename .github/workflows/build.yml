name: "Check Version for Change"
on:
  workflow_call:
    inputs:
      plugin-name: #e.g.: network
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout oscd-plugins/main
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Run Tests
        run: (cd ./packages/uilib ; npm run test)

      - name: Build Plugin
        run: pnpm -C ./packages/plugins/${{ inputs.plugin-name }} run build

      - name: Retrieve Version
        id: version
        run: |
          cd ./packages/plugins/${{inputs.plugin-name}}
          echo "version=$(npm pkg get version)" >> "$GITHUB_OUTPUT"

      - name: Prep-Build
        run: mkdir _build_ && cd _build_

      - name: Checkout oscd-plugins
        uses: actions/checkout@v3
        with:
          repository: sprinteins/oscd-plugins
          ref: gh-pages
          path: _build_

      - name: Add built files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd $GITHUB_WORKSPACE/_build_
          mkdir -p $GITHUB_WORKSPACE/_build_/${{ inputs.plugin-name }}/${{steps.version.outputs.version}}
          cp -f $GITHUB_WORKSPACE/packages/plugins/${{ inputs.plugin-name }}/dist/index.js $GITHUB_WORKSPACE/_build_/${{ inputs.plugin-name }}/
          cp -f $GITHUB_WORKSPACE/packages/plugins/${{ inputs.plugin-name }}/dist/index.js $GITHUB_WORKSPACE/_build_/${{ inputs.plugin-name }}/${{steps.version.outputs.version}}/
          cp -f $GITHUB_WORKSPACE/packages/plugins/${{ inputs.plugin-name }}/package.json $GITHUB_WORKSPACE/_build_/${{ inputs.plugin-name }}/
          cp -f $GITHUB_WORKSPACE/packages/plugins/${{ inputs.plugin-name }}/dist/*.css $GITHUB_WORKSPACE/_build_/${{ inputs.plugin-name }}/
          cp -f $GITHUB_WORKSPACE/packages/plugins/${{ inputs.plugin-name }}/dist/*.css $GITHUB_WORKSPACE/_build_/${{ inputs.plugin-name }}/${{steps.version.outputs.version}}/
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update file"
          git push https://x-access-token:$GH_TOKEN@github.com/sprinteins/oscd-plugins.git HEAD:gh-pages
